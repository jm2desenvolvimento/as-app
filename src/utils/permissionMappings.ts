// Mapeamento de categorias com √≠cones e nomes
export const PERMISSION_CATEGORIES = {
  dashboard: { icon: "üìä", name: "Dashboard", color: "bg-blue-50 border-blue-200" },
  user: { icon: "üë•", name: "Usu√°rios", color: "bg-green-50 border-green-200" },
  profile: { icon: "üìã", name: "Perfis", color: "bg-purple-50 border-purple-200" },
  permission: { icon: "üîê", name: "Permiss√µes", color: "bg-red-50 border-red-200" },
  role: { icon: "üé≠", name: "Roles", color: "bg-indigo-50 border-indigo-200" },
  appointment: { icon: "üè•", name: "Agendamentos", color: "bg-teal-50 border-teal-200" },
  patient: { icon: "üë§", name: "Pacientes", color: "bg-pink-50 border-pink-200" },
  doctor: { icon: "üë®‚Äç‚öïÔ∏è", name: "M√©dicos", color: "bg-cyan-50 border-cyan-200" },
  specialty: { icon: "üè•", name: "Especialidades", color: "bg-orange-50 border-orange-200" },
  health_unit: { icon: "üè¢", name: "Unidades de Sa√∫de", color: "bg-emerald-50 border-emerald-200" },
  city_hall: { icon: "üèõÔ∏è", name: "Prefeituras", color: "bg-yellow-50 border-yellow-200" },
  medical_record: { icon: "üìã", name: "Prontu√°rios", color: "bg-lime-50 border-lime-200" },
  medical_schedule: { icon: "üìÖ", name: "Agendas M√©dicas", color: "bg-violet-50 border-violet-200" },
  report: { icon: "üìä", name: "Relat√≥rios", color: "bg-rose-50 border-rose-200" },
  config: { icon: "‚öôÔ∏è", name: "Configura√ß√µes", color: "bg-gray-50 border-gray-200" },
  system: { icon: "üñ•Ô∏è", name: "Sistema", color: "bg-slate-50 border-slate-200" },
  audit: { icon: "üìù", name: "Auditoria", color: "bg-amber-50 border-amber-200" },
  notification: { icon: "üì®", name: "Notifica√ß√µes", color: "bg-sky-50 border-sky-200" },
};

// Mapeamento de nomes humanizados das permiss√µes
export const PERMISSION_NAMES = {
  // === DASHBOARD ===
  dashboard_view: "Visualizar dashboard",
  dashboard_stats: "Visualizar estat√≠sticas",
  dashboard_reports: "Acessar relat√≥rios do dashboard",

  // === USU√ÅRIOS ===
  user_create: "Criar usu√°rios",
  user_read: "Visualizar usu√°rios",
  user_update: "Editar usu√°rios",
  user_delete: "Excluir usu√°rios",
  user_list: "Listar usu√°rios",

  // === PERFIS ===
  profile_create: "Criar perfis",
  profile_read: "Visualizar perfis",
  profile_update: "Editar perfis",
  profile_delete: "Excluir perfis",
  profile_list: "Listar perfis",

  // === PERMISS√ïES ===
  permission_create: "Criar permiss√µes",
  permission_read: "Visualizar permiss√µes",
  permission_update: "Editar permiss√µes",
  permission_delete: "Excluir permiss√µes",
  permission_list: "Listar permiss√µes",

  // === ROLES ===
  role_create: "Criar roles",
  role_read: "Visualizar roles",
  role_update: "Editar roles",
  role_delete: "Excluir roles",
  role_list: "Listar roles",
  user_permission_manage: "Gerenciar permiss√µes de usu√°rios",

  // === AGENDAMENTOS ===
  appointment_create: "Criar agendamentos",
  appointment_read: "Visualizar agendamentos",
  appointment_update: "Editar agendamentos",
  appointment_delete: "Excluir agendamentos",
  appointment_list: "Listar agendamentos",
  appointment_cancel: "Cancelar agendamentos",
  appointment_reschedule: "Reagendar agendamentos",

  // === PACIENTES ===
  patient_create: "Criar pacientes",
  patient_read: "Visualizar pacientes",
  patient_update: "Editar pacientes",
  patient_delete: "Excluir pacientes",
  patient_list: "Listar pacientes",

  // === M√âDICOS ===
  doctor_create: "Criar m√©dicos",
  doctor_read: "Visualizar m√©dicos",
  doctor_update: "Editar m√©dicos",
  doctor_delete: "Excluir m√©dicos",
  doctor_list: "Listar m√©dicos",

  // === ESPECIALIDADES ===
  specialty_create: "Criar especialidades",
  specialty_read: "Visualizar especialidades",
  specialty_update: "Editar especialidades",
  specialty_delete: "Excluir especialidades",
  specialty_list: "Listar especialidades",

  // === UNIDADES DE SA√öDE ===
  health_unit_create: "Criar unidades de sa√∫de",
  health_unit_read: "Visualizar unidades de sa√∫de",
  health_unit_update: "Editar unidades de sa√∫de",
  health_unit_delete: "Excluir unidades de sa√∫de",
  health_unit_list: "Listar unidades de sa√∫de",

  // === PREFEITURAS ===
  city_hall_create: "Criar prefeituras",
  city_hall_read: "Visualizar prefeituras",
  city_hall_update: "Editar prefeituras",
  city_hall_delete: "Excluir prefeituras",
  city_hall_list: "Listar prefeituras",

  // === PRONTU√ÅRIOS M√âDICOS ===
  medical_record_create: "Criar prontu√°rios",
  medical_record_read: "Visualizar prontu√°rios",
  medical_record_update: "Editar prontu√°rios",
  medical_record_delete: "Excluir prontu√°rios",
  medical_record_list: "Listar prontu√°rios",

  // === AGENDAS M√âDICAS ===
  medical_schedule_create: "Criar agendas m√©dicas",
  medical_schedule_read: "Visualizar agendas m√©dicas",
  medical_schedule_update: "Editar agendas m√©dicas",
  medical_schedule_delete: "Excluir agendas m√©dicas",
  medical_schedule_list: "Listar agendas m√©dicas",

  // === RELAT√ìRIOS ===
  report_generate: "Gerar relat√≥rios",
  report_view: "Visualizar relat√≥rios",
  report_export: "Exportar relat√≥rios",

  // === CONFIGURA√á√ïES ===
  config_view: "Visualizar configura√ß√µes",
  config_update: "Editar configura√ß√µes",
  system_settings: "Configura√ß√µes do sistema",

  // === AUDITORIA ===
  audit_view: "Visualizar auditoria",
  audit_export: "Exportar logs de auditoria",

  // === NOTIFICA√á√ïES ===
  notification_send: "Enviar notifica√ß√µes",
  notification_view: "Visualizar notifica√ß√µes",
  notification_manage: "Gerenciar notifica√ß√µes",
};

// Fun√ß√£o para extrair a categoria de uma permiss√£o
export const getPermissionCategory = (permissionName: string): string => {
  const parts = permissionName.split('_');
  return parts[0] || 'other';
};

// Fun√ß√£o para obter o nome humanizado de uma permiss√£o
export const getPermissionDisplayName = (permissionName: string): string => {
  return PERMISSION_NAMES[permissionName as keyof typeof PERMISSION_NAMES] || permissionName;
};

// Fun√ß√£o para agrupar permiss√µes por categoria
export const groupPermissionsByCategory = (permissions: string[]) => {
  const grouped: Record<string, string[]> = {};
  
  permissions.forEach(permission => {
    const category = getPermissionCategory(permission);
    if (!grouped[category]) {
      grouped[category] = [];
    }
    grouped[category].push(permission);
  });

  // Ordenar permiss√µes dentro de cada categoria
  Object.keys(grouped).forEach(category => {
    grouped[category].sort();
  });

  return grouped;
};

// Fun√ß√£o para obter informa√ß√µes da categoria
export const getCategoryInfo = (categoryKey: string) => {
  return PERMISSION_CATEGORIES[categoryKey as keyof typeof PERMISSION_CATEGORIES] || {
    icon: "üìù",
    name: categoryKey.charAt(0).toUpperCase() + categoryKey.slice(1),
    color: "bg-gray-50 border-gray-200"
  };
};

// Lista dos roles dispon√≠veis
export const AVAILABLE_ROLES = [
  { key: 'MASTER', name: 'Master', color: 'bg-red-600', description: 'Acesso total ao sistema' },
  { key: 'ADMIN', name: 'Administrador', color: 'bg-blue-600', description: 'Acesso administrativo' },
  { key: 'DOCTOR', name: 'M√©dico', color: 'bg-green-600', description: 'Acesso m√©dico' },
  { key: 'PATIENT', name: 'Paciente', color: 'bg-purple-600', description: 'Acesso b√°sico' },
]; 